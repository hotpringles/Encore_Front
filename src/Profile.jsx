import React, { useMemo, useState } from 'react';
import './Profile.css';
import userAvatar from './assets/seed.png';

const INITIAL_PROFILE = {
    name: 'ÌôçÍ∏∏Îèô',
    email: 'finance4u@example.com',
};

function Profile() {
    const [isImageModalOpen, setIsImageModalOpen] = useState(false);
    const [profileValues, setProfileValues] = useState(INITIAL_PROFILE);
    const [passwordValues, setPasswordValues] = useState({
        currentPassword: '',
        newPassword: '',
    });

    const level = 7;
    const progress = 62;

    const handleProfileChange = (field) => (event) => {
        setProfileValues((prev) => ({
            ...prev,
            [field]: event.target.value,
        }));
    };

    const handlePasswordChange = (field) => (event) => {
        setPasswordValues((prev) => ({
            ...prev,
            [field]: event.target.value,
        }));
    };

    const hasProfileChanges = useMemo(() => (
        profileValues.name !== INITIAL_PROFILE.name ||
        profileValues.email !== INITIAL_PROFILE.email
    ), [profileValues]);

    const handleProfileSubmit = (event) => {
        event.preventDefault();
        console.log('ÌîÑÎ°úÌïÑ Ï†ïÎ≥¥ Ï†ÄÏû•', profileValues);
    };

    const handlePasswordSubmit = (event) => {
        event.preventDefault();
        console.log('ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω ÏöîÏ≤≠', passwordValues);
    };

    const handleLogout = () => {
        console.log('Î°úÍ∑∏ÏïÑÏõÉ ÌÅ¥Î¶≠');
    };

    const handleAvatarKeyDown = (event) => {
        if (event.key === 'Enter' || event.key === ' ') {
            event.preventDefault();
            setIsImageModalOpen(true);
        }
    };

    return (
        <div className="profile-wrapper">
            <div className="profile-header">
                <h1 className="profile-title">ÌîÑÎ°úÌïÑ ÏÑ§Ï†ï</h1>
                <div className="profile-title-separator" />
            </div>

            <div className="profile-content">
                <aside className="profile-card">
                    <div
                        className="profile-avatar"
                        onClick={() => setIsImageModalOpen(true)}
                        onKeyDown={handleAvatarKeyDown}
                        role="button"
                        tabIndex={0}
                        aria-label="ÏïÑÎ∞îÌÉÄ ÌÅ¨Í≤å Î≥¥Í∏∞"
                    >
                        <img src={userAvatar} alt="ÏÇ¨Ïö©Ïûê ÏïÑÎ∞îÌÉÄ" />
                    </div>
                    <p className="profile-name">{profileValues.name}</p>
                    <p className="profile-rank">Îì±Í∏â ¬∑ üê£</p>

                    <div className="profile-progress">
                        <div className="profile-progress-track">
                            <div className="profile-progress-fill" style={{ width: `${progress}%` }}>
                                <span>LV {level} ¬∑ {progress}%</span>
                            </div>
                        </div>
                    </div>

                    <button type="button" className="profile-logout" onClick={handleLogout}>
                        Î°úÍ∑∏ÏïÑÏõÉ
                    </button>
                </aside>

                <div className="profile-panels">
                    <section className="profile-panel">
                        <h2 className="panel-title">Í∏∞Î≥∏ Ï†ïÎ≥¥</h2>
                        <form className="profile-form" onSubmit={handleProfileSubmit}>
                            <div className="profile-form-row">
                                <label className="profile-label" htmlFor="profile-name">Ïù¥Î¶Ñ</label>
                                <input
                                    id="profile-name"
                                    type="text"
                                    className="profile-input"
                                    value={profileValues.name}
                                    onChange={handleProfileChange('name')}
                                />
                            </div>
                            <div className="profile-form-row">
                                <label className="profile-label" htmlFor="profile-email">Ïù¥Î©îÏùº</label>
                                <input
                                    id="profile-email"
                                    type="email"
                                    className="profile-input"
                                    value={profileValues.email}
                                    onChange={handleProfileChange('email')}
                                />
                            </div>
                            <div className="profile-form-actions">
                                <button
                                    type="submit"
                                    className="profile-save"
                                    disabled={!hasProfileChanges}
                                >
                                    Ï†ïÎ≥¥ Ï†ÄÏû•
                                </button>
                            </div>
                        </form>
                    </section>

                    <section className="profile-panel">
                        <h2 className="panel-title">ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω</h2>
                        <form className="profile-form" onSubmit={handlePasswordSubmit}>
                            <div className="profile-form-row">
                                <label className="profile-label" htmlFor="current-password">ÌòÑÏû¨ ÎπÑÎ∞ÄÎ≤àÌò∏</label>
                                <input
                                    id="current-password"
                                    type="password"
                                    className="profile-input"
                                    placeholder="ÌòÑÏû¨ ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                                    value={passwordValues.currentPassword}
                                    onChange={handlePasswordChange('currentPassword')}
                                />
                            </div>
                            <div className="profile-form-row">
                                <label className="profile-label" htmlFor="new-password">ÏÉà ÎπÑÎ∞ÄÎ≤àÌò∏</label>
                                <input
                                    id="new-password"
                                    type="password"
                                    className="profile-input"
                                    placeholder="ÏÉà ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                                    value={passwordValues.newPassword}
                                    onChange={handlePasswordChange('newPassword')}
                                />
                            </div>
                            <button
                                type="submit"
                                className="profile-submit"
                                disabled={!passwordValues.currentPassword || !passwordValues.newPassword}
                            >
                                ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω
                            </button>
                        </form>
                    </section>
                </div>
            </div>

            {isImageModalOpen && (
                <div className="image-modal-overlay" onClick={() => setIsImageModalOpen(false)}>
                    <img src={userAvatar} alt="ÏïÑÎ∞îÌÉÄ ÌôïÎåÄ" className="enlarged-image" />
                </div>
            )}
        </div>
    );
}

export default Profile;

